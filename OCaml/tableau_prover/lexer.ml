# 1 "lexer.mll"
 
  open Parser

# 6 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\221\255\222\255\224\255\000\000\230\255\231\255\232\255\
    \001\000\235\255\001\000\001\000\241\255\000\000\001\000\001\000\
    \000\000\001\000\002\000\192\000\002\000\002\000\254\255\252\255\
    \251\255\000\000\000\000\001\000\250\255\245\255\249\255\233\255\
    \239\255\029\000\032\000\248\255\247\255\244\255\000\000\000\000\
    \003\000\223\255\225\255\242\255\236\255\228\255\240\255\238\255\
    \234\255\227\255\087\000\253\255\008\000\008\000\255\255\254\255\
    ";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\033\000\255\255\255\255\255\255\
    \033\000\255\255\018\000\033\000\255\255\033\000\012\000\033\000\
    \033\000\026\000\009\000\002\000\029\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\002\000\002\000\255\255\255\255\
    ";
  Lexing.lex_default = 
   "\002\000\000\000\000\000\000\000\255\255\000\000\000\000\000\000\
    \255\255\000\000\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \000\000\255\255\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\000\000\000\000\000\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\051\000\000\000\255\255\255\255\000\000\000\000\
    ";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\021\000\021\000\021\000\021\000\021\000\000\000\021\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \021\000\005\000\021\000\000\000\000\000\000\000\014\000\037\000\
    \020\000\003\000\012\000\009\000\022\000\017\000\033\000\011\000\
    \048\000\055\000\054\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\015\000\018\000\034\000\024\000\
    \023\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\007\000\019\000\
    \019\000\019\000\019\000\036\000\008\000\046\000\035\000\019\000\
    \000\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\000\000\010\000\047\000\006\000\053\000\
    \000\000\052\000\000\000\000\000\000\000\000\000\027\000\026\000\
    \025\000\043\000\000\000\042\000\041\000\000\000\000\000\000\000\
    \000\000\000\000\030\000\028\000\029\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\044\000\000\000\000\000\000\000\
    \000\000\000\000\045\000\000\000\000\000\000\000\000\000\032\000\
    \031\000\000\000\000\000\000\000\049\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\040\000\039\000\000\000\038\000\
    \000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\000\000\019\000\
    \019\000\019\000\019\000\000\000\000\000\000\000\000\000\019\000\
    \000\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\021\000\021\000\000\000\255\255\021\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\021\000\255\255\255\255\255\255\000\000\014\000\
    \000\000\000\000\000\000\000\000\020\000\000\000\015\000\000\000\
    \008\000\052\000\053\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\015\000\017\000\
    \018\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\033\000\000\000\011\000\034\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\010\000\000\000\050\000\
    \255\255\050\000\255\255\255\255\255\255\255\255\016\000\016\000\
    \016\000\040\000\255\255\040\000\040\000\255\255\255\255\255\255\
    \255\255\255\255\026\000\027\000\026\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\039\000\255\255\255\255\255\255\
    \255\255\255\255\038\000\255\255\255\255\255\255\255\255\025\000\
    \025\000\255\255\255\255\255\255\004\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\013\000\013\000\255\255\013\000\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\255\255\019\000\
    \019\000\019\000\019\000\255\255\255\255\255\255\255\255\019\000\
    \255\255\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\050\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 11 "lexer.mll"
           ( token lexbuf )
# 172 "lexer.ml"

  | 1 ->
# 12 "lexer.mll"
         ( in_comment lexbuf; token lexbuf )
# 177 "lexer.ml"

  | 2 ->
# 13 "lexer.mll"
                              ( IDENT (Lexing.lexeme lexbuf) )
# 182 "lexer.ml"

  | 3 ->
# 14 "lexer.mll"
         ( ARROW )
# 187 "lexer.ml"

  | 4 ->
# 15 "lexer.mll"
         ( ARROW )
# 192 "lexer.ml"

  | 5 ->
# 16 "lexer.mll"
          ( ARROW )
# 197 "lexer.ml"

  | 6 ->
# 17 "lexer.mll"
          ( ARROW )
# 202 "lexer.ml"

  | 7 ->
# 18 "lexer.mll"
          ( EQUIV )
# 207 "lexer.ml"

  | 8 ->
# 19 "lexer.mll"
          ( EQUIV )
# 212 "lexer.ml"

  | 9 ->
# 20 "lexer.mll"
        ( EQUIV )
# 217 "lexer.ml"

  | 10 ->
# 21 "lexer.mll"
          ( EQUIV )
# 222 "lexer.ml"

  | 11 ->
# 22 "lexer.mll"
         ( AND )
# 227 "lexer.ml"

  | 12 ->
# 23 "lexer.mll"
        ( AND )
# 232 "lexer.ml"

  | 13 ->
# 24 "lexer.mll"
          ( AND )
# 237 "lexer.ml"

  | 14 ->
# 25 "lexer.mll"
        ( AND )
# 242 "lexer.ml"

  | 15 ->
# 26 "lexer.mll"
          ( AND )
# 247 "lexer.ml"

  | 16 ->
# 27 "lexer.mll"
          ( AND )
# 252 "lexer.ml"

  | 17 ->
# 28 "lexer.mll"
         ( OR )
# 257 "lexer.ml"

  | 18 ->
# 29 "lexer.mll"
        ( OR )
# 262 "lexer.ml"

  | 19 ->
# 30 "lexer.mll"
          ( OR )
# 267 "lexer.ml"

  | 20 ->
# 31 "lexer.mll"
        ( OR )
# 272 "lexer.ml"

  | 21 ->
# 32 "lexer.mll"
          ( OR )
# 277 "lexer.ml"

  | 22 ->
# 33 "lexer.mll"
          ( OR )
# 282 "lexer.ml"

  | 23 ->
# 34 "lexer.mll"
        ( OR )
# 287 "lexer.ml"

  | 24 ->
# 35 "lexer.mll"
        ( NOT )
# 292 "lexer.ml"

  | 25 ->
# 36 "lexer.mll"
        ( NOT )
# 297 "lexer.ml"

  | 26 ->
# 37 "lexer.mll"
        ( NOT )
# 302 "lexer.ml"

  | 27 ->
# 38 "lexer.mll"
          ( NOT )
# 307 "lexer.ml"

  | 28 ->
# 39 "lexer.mll"
         ( NOT )
# 312 "lexer.ml"

  | 29 ->
# 43 "lexer.mll"
        ( LPAREN )
# 317 "lexer.ml"

  | 30 ->
# 44 "lexer.mll"
          ( LPAREN )
# 322 "lexer.ml"

  | 31 ->
# 45 "lexer.mll"
        ( RPAREN )
# 327 "lexer.ml"

  | 32 ->
# 46 "lexer.mll"
          ( RPAREN )
# 332 "lexer.ml"

  | 33 ->
# 47 "lexer.mll"
      ( STRAY )
# 337 "lexer.ml"

  | 34 ->
# 48 "lexer.mll"
        ( EOF )
# 342 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and in_comment lexbuf =
    __ocaml_lex_in_comment_rec lexbuf 50
and __ocaml_lex_in_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 50 "lexer.mll"
             ( in_comment lexbuf; in_comment lexbuf )
# 354 "lexer.ml"

  | 1 ->
# 51 "lexer.mll"
         ( () )
# 359 "lexer.ml"

  | 2 ->
# 52 "lexer.mll"
      ( in_comment lexbuf )
# 364 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_in_comment_rec lexbuf __ocaml_lex_state

;;

