# 1 "lexer.mll"
 
  open Parser
  let keyword_table = Hashtbl.create 1010
  let latex_table = Hashtbl.create 10101
  let _ =
    List.iter (fun (kwd, tok) -> Hashtbl.add keyword_table kwd tok)
    [ "IMPLIES", ARROW;
      "Implies", ARROW;
      "implies", ARROW;
      "IFF", EQUIV;
      "Iff", EQUIV;
      "iff", EQUIV;
      "AND", AND;
      "And", AND;
      "and", AND;
      "OR", OR;
      "Or", OR;
      "or", OR;
      "NOT", NOT;
      "Not", NOT;
      "not", NOT;
      "FALSE", BOT;
      "False", BOT;
      "false", BOT;
      "TRUE", TOP;
      "True", TOP;
      "true", TOP;
    ]
  let _ =
    List.iter (fun (kwd, tok) -> Hashtbl.add latex_table kwd tok)
    [ "to", ARROW;
      "Rightarrow", ARROW;
      "supset", ARROW;
      "implies", ARROW;
      "Leftrightarrow", EQUIV;
      "equiv", EQUIV;
      "leftrightarrow", EQUIV;
      "iff", EQUIV;
      "wedge", AND;
      "land", AND;
      "vee", OR;
      "lor", OR;
      "lnot", NOT;
      "neg", NOT;
      "sim", NOT;
      "bot", BOT;
      "top", TOP;
    ]

# 52 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\218\255\220\255\223\255\224\255\001\000\229\255\230\255\
    \233\255\003\000\001\000\239\255\000\000\001\000\001\000\000\000\
    \001\000\002\000\095\000\192\000\011\001\002\000\255\255\254\255\
    \232\255\086\001\250\255\249\255\021\000\051\000\000\000\001\000\
    \248\255\243\255\247\255\231\255\237\255\225\255\029\000\032\000\
    \246\255\245\255\242\255\025\000\000\000\003\000\219\255\221\255\
    \240\255\234\255\227\255\238\255\236\255\001\000\226\255\103\000\
    \253\255\009\000\009\000\255\255\254\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\020\000\255\255\255\255\255\255\014\000\255\255\255\255\
    \027\000\011\000\255\255\003\000\002\000\033\000\255\255\255\255\
    \255\255\004\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\002\000\002\000\255\255\255\255";
  Lexing.lex_default = 
   "\255\255\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \000\000\255\255\000\000\000\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\255\255\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\056\000\
    \000\000\255\255\255\255\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\022\000\022\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \022\000\006\000\000\000\000\000\000\000\000\000\013\000\042\000\
    \021\000\002\000\011\000\008\000\023\000\016\000\038\000\010\000\
    \004\000\003\000\060\000\059\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\014\000\017\000\039\000\027\000\
    \026\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\020\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\041\000\018\000\051\000\040\000\005\000\
    \054\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\000\000\009\000\053\000\007\000\052\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\031\000\030\000\
    \029\000\048\000\028\000\047\000\046\000\000\000\024\000\058\000\
    \000\000\057\000\034\000\032\000\033\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\049\000\000\000\000\000\000\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\037\000\050\000\045\000\044\000\000\000\043\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\036\000\035\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\015\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\012\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\000\000\000\000\000\000\000\000\019\000\
    \000\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\000\000\255\255\
    \000\000\000\000\019\000\000\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\000\000\000\000\000\000\000\000\000\000\000\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\255\255\255\255\255\255\000\000\013\000\
    \000\000\000\000\000\000\000\000\021\000\000\000\014\000\000\000\
    \000\000\000\000\057\000\058\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\014\000\016\000\
    \017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\038\000\000\000\010\000\039\000\000\000\
    \053\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\005\000\000\000\009\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\015\000\015\000\
    \015\000\045\000\015\000\045\000\045\000\255\255\018\000\055\000\
    \255\255\055\000\030\000\031\000\030\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\044\000\255\255\255\255\255\255\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\028\000\043\000\012\000\012\000\255\255\012\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\029\000\029\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\255\255\255\255\255\255\255\255\019\000\
    \255\255\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\255\255\055\000\
    \255\255\255\255\020\000\255\255\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\255\255\255\255\255\255\255\255\255\255\255\255\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 51 "lexer.mll"
                        ( token lexbuf )
# 254 "lexer.ml"

  | 1 ->
# 52 "lexer.mll"
             ( in_comment lexbuf; token lexbuf )
# 259 "lexer.ml"

  | 2 ->
# 53 "lexer.mll"
            ( TOP )
# 264 "lexer.ml"

  | 3 ->
let
# 54 "lexer.mll"
                                                              id
# 270 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 54 "lexer.mll"
                                                                 (
          try
            Hashtbl.find keyword_table id
          with Not_found ->
            IDENT id )
# 278 "lexer.ml"

  | 4 ->
let
# 59 "lexer.mll"
                                                               id
# 284 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 59 "lexer.mll"
                                                                  (
          Hashtbl.find latex_table id )
# 289 "lexer.ml"

  | 5 ->
# 61 "lexer.mll"
             ( ARROW )
# 294 "lexer.ml"

  | 6 ->
# 62 "lexer.mll"
             ( ARROW )
# 299 "lexer.ml"

  | 7 ->
# 63 "lexer.mll"
              ( ARROW )
# 304 "lexer.ml"

  | 8 ->
# 64 "lexer.mll"
              ( ARROW )
# 309 "lexer.ml"

  | 9 ->
# 65 "lexer.mll"
              ( EQUIV )
# 314 "lexer.ml"

  | 10 ->
# 66 "lexer.mll"
              ( EQUIV )
# 319 "lexer.ml"

  | 11 ->
# 67 "lexer.mll"
            ( EQUIV )
# 324 "lexer.ml"

  | 12 ->
# 68 "lexer.mll"
              ( EQUIV )
# 329 "lexer.ml"

  | 13 ->
# 69 "lexer.mll"
             ( AND )
# 334 "lexer.ml"

  | 14 ->
# 70 "lexer.mll"
            ( AND )
# 339 "lexer.ml"

  | 15 ->
# 71 "lexer.mll"
              ( AND )
# 344 "lexer.ml"

  | 16 ->
# 72 "lexer.mll"
            ( AND )
# 349 "lexer.ml"

  | 17 ->
# 73 "lexer.mll"
              ( AND )
# 354 "lexer.ml"

  | 18 ->
# 74 "lexer.mll"
              ( AND )
# 359 "lexer.ml"

  | 19 ->
# 75 "lexer.mll"
             ( OR )
# 364 "lexer.ml"

  | 20 ->
# 76 "lexer.mll"
            ( OR )
# 369 "lexer.ml"

  | 21 ->
# 77 "lexer.mll"
              ( OR )
# 374 "lexer.ml"

  | 22 ->
# 78 "lexer.mll"
            ( OR )
# 379 "lexer.ml"

  | 23 ->
# 79 "lexer.mll"
              ( OR )
# 384 "lexer.ml"

  | 24 ->
# 80 "lexer.mll"
              ( OR )
# 389 "lexer.ml"

  | 25 ->
# 81 "lexer.mll"
            ( NOT )
# 394 "lexer.ml"

  | 26 ->
# 82 "lexer.mll"
            ( NOT )
# 399 "lexer.ml"

  | 27 ->
# 83 "lexer.mll"
            ( NOT )
# 404 "lexer.ml"

  | 28 ->
# 84 "lexer.mll"
              ( NOT )
# 409 "lexer.ml"

  | 29 ->
# 85 "lexer.mll"
              ( BOT )
# 414 "lexer.ml"

  | 30 ->
# 86 "lexer.mll"
              ( BOT )
# 419 "lexer.ml"

  | 31 ->
# 87 "lexer.mll"
            ( BOT )
# 424 "lexer.ml"

  | 32 ->
# 88 "lexer.mll"
            ( TOP )
# 429 "lexer.ml"

  | 33 ->
# 89 "lexer.mll"
            ( LPAREN )
# 434 "lexer.ml"

  | 34 ->
# 90 "lexer.mll"
              ( LPAREN )
# 439 "lexer.ml"

  | 35 ->
# 91 "lexer.mll"
            ( RPAREN )
# 444 "lexer.ml"

  | 36 ->
# 92 "lexer.mll"
              ( RPAREN )
# 449 "lexer.ml"

  | 37 ->
# 93 "lexer.mll"
            ( EOF )
# 454 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and in_comment lexbuf =
    __ocaml_lex_in_comment_rec lexbuf 55
and __ocaml_lex_in_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 95 "lexer.mll"
             ( in_comment lexbuf; in_comment lexbuf )
# 465 "lexer.ml"

  | 1 ->
# 96 "lexer.mll"
             ( () )
# 470 "lexer.ml"

  | 2 ->
# 97 "lexer.mll"
          ( in_comment lexbuf )
# 475 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_in_comment_rec lexbuf __ocaml_lex_state

;;

